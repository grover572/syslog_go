name: Release Package

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号（例如：1.0.0）'
        required: true
        default: '0.0.1'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows x86_64
          - os: windows-latest
            arch: amd64
            platform: windows
          # Linux x86_64
          - os: ubuntu-latest
            arch: amd64
            platform: linux
          # Linux ARM64
          - os: ubuntu-latest
            arch: arm64
            platform: linux
          # macOS x86_64
          - os: macos-latest
            arch: amd64
            platform: darwin
          # macOS ARM64
          - os: macos-latest
            arch: arm64
            platform: darwin
          # CentOS x86_64 (using container)
          - os: ubuntu-latest
            arch: amd64
            platform: centos
            container: quay.io/centos/centos:stream8
          # CentOS ARM64 (using container)
          - os: ubuntu-latest
            arch: arm64
            platform: centos
            container: quay.io/centos/centos:stream8

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Set up QEMU
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install RPM build tools
        run: |
          if [ "${{ matrix.platform }}" = "centos" ]; then
            dnf install -y rpm-build
          elif [ "${{ matrix.platform }}" = "linux" ]; then
            sudo apt-get update
            sudo apt-get install -y rpm
          elif [ "${{ matrix.platform }}" = "darwin" ]; then
            brew install rpm
          fi

      - name: Set version
        id: set_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.event.inputs.version || '0.0.1' }}" >> $GITHUB_ENV
          fi

      - name: Build package
        shell: bash
        if: matrix.platform != 'windows'
        run: |
          if [ "${{ matrix.platform }}" = "centos" ]; then
            GOOS=linux GOARCH=${{ matrix.arch }} make rpm
          else
            GOOS=${{ matrix.platform }} GOARCH=${{ matrix.arch }} go build -o syslog_go
          fi

      - name: Build package (Windows)
        if: matrix.platform == 'windows'
        shell: pwsh
        run: |
          $env:GOOS="${{ matrix.platform }}"
          $env:GOARCH="${{ matrix.arch }}"
          go build -o syslog_go.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: syslog_go-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            ${{ matrix.platform == 'centos' && '~/rpmbuild/RPMS/**/*.rpm' || (matrix.platform == 'windows' && 'syslog_go.exe' || 'syslog_go') }}

      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.platform == 'centos' && '~/rpmbuild/RPMS/**/*.rpm' || (matrix.platform == 'windows' && 'syslog_go.exe' || 'syslog_go') }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}